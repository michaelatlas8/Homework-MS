import Foundation

struct WeatherAPI {
    let apiKey = "YOUR_API_KEY"
    let baseURL = "https://api.openweathermap.org/data/2.5/weather?"
    
    func fetchWeatherData(for location: String, completion: @escaping (WeatherData?, Error?) -> Void) {
        let urlString = "\(baseURL)q=\(location)&appid=\(apiKey)"
        guard let url = URL(string: urlString) else {
            completion(nil, NSError(domain: "Invalid URL", code: -1, userInfo: nil))
            return
        }
        
        let task = URLSession.shared.dataTask(with: url) { (data, response, error) in
            if let error = error {
                completion(nil, error)
                return
            }
            
            guard let data = data else {
                completion(nil, NSError(domain: "No data received", code: -1, userInfo: nil))
                return
            }
            
            do {
                let decoder = JSONDecoder()
                decoder.dateDecodingStrategy = .secondsSince1970
                let weatherData = try decoder.decode(WeatherData.self, from: data)
                completion(weatherData, nil)
            } catch {
                completion(nil, error)
            }
        }
        
        task.resume()
    }
}

struct WeatherData: Codable {
    let main: Main
    let name: String
}

struct Main: Codable {
    let temp: Double
}

import UserNotifications

struct NotificationManager {
    func scheduleNotification(for weatherData: WeatherData, time: Date) {
        let content = UNMutableNotificationContent()
        content.title = "Weather Update"
        content.body = "The current temperature in \(weatherData.name) is \(weatherData.main.temp)Â°C."
        content.sound = .default
        
        let trigger = UNTimeIntervalNotificationTrigger(timeInterval: time.timeIntervalSinceNow, repeats: false)
        
        let requestIdentifier = "weatherNotification"
        let request = UNNotificationRequest(identifier: requestIdentifier, content: content, trigger: trigger)
        
        UNUserNotificationCenter.current().add(request) { error in
            if let error = error {
                print("Error scheduling notification: \(error)")
            }
        }
    }
}

import UIKit

class ViewController: UIViewController {
    @IBOutlet weak var locationTextField: UITextField!
    @IBOutlet weak var notificationTimePicker: UIDatePicker!
    
    @IBAction func scheduleNotificationButtonTapped(_ sender: UIButton) {
        guard let location = locationTextField.text, !location.isEmpty else {
            print("Please enter a location")
            return
        }
        
        let weatherAPI = WeatherAPI()
        weatherAPI.fetchWeatherData(for: location) { (weatherData, error) in
            if let error = error {
                print("Error fetching weather data: \(error)")
                return
            }
            
            guard let weatherData = weatherData else {
                print("No weather data received")
                return
            }
            
            let notificationManager = NotificationManager()
            notificationManager.scheduleNotification(for: weatherData, time: self.notificationTimePicker.date)
        }
    }
}

let location = "Prague,cz"

let calendar = Calendar.current
let tomorrow = calendar.date(byAdding: .day, value: 1, to: Date())!
let notificationTime = calendar.date(bySettingHour: 9, minute: 0, second: 0, of: tomorrow)!

let apiKey = "YOUR_OPENWEATHERMAP_API_KEY"

